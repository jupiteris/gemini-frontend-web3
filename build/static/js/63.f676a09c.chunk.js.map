{"version":3,"sources":["app/routes/RegisterPage/routes/Manager/index.js"],"names":["Manager","props","_this","Object","F_Task_React_Gemini_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","F_Task_React_Gemini_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","F_Task_React_Gemini_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","handleRequestClose","setState","showMessage","showRegisters","registerList","selectedPageNum","numPerPage","users","slice","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_RegisterList__WEBPACK_IMPORTED_MODULE_10__","onSearch","e","searchKey","target","value","selectPageNum","RegisterSideBar","className","util_CustomScrollbars__WEBPACK_IMPORTED_MODULE_12__","style","height","width","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_9___default","variant","color","aria-label","onClick","onTapNewRegister","onRegisterClose","isOpen","filterUsers","userName","filter","user","first_name","last_name","toLowerCase","indexOf","handlePageClick","data","selected","state","noContentFoundMessage","alertMessage","drawerState","currentRegister","selectedRegister","selectedRegisters","addBuildingState","_this$state","managers","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_13___default","open","onClose","onToggleDrawer","bind","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_6___default","components_AppModuleHeader_index__WEBPACK_IMPORTED_MODULE_11__","placeholder","notification","apps","onChange","length","react_paginate__WEBPACK_IMPORTED_MODULE_15___default","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageClassName","activeClassName","disabledClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","_NewRegister__WEBPACK_IMPORTED_MODULE_14__","user_type","register","_material_ui_core_Snackbar__WEBPACK_IMPORTED_MODULE_8___default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","id","Component","connect","_ref","settings"],"mappings":"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","file":"static/js/63.f676a09c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { connect } from \"react-redux\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Button from \"@material-ui/core/Button\";\nimport RegisterList from \"../../RegisterList\";\nimport AppModuleHeader from \"components/AppModuleHeader/index\";\nimport CustomScrollbars from \"util/CustomScrollbars\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport NewRegister from \"../../NewRegister\";\nimport ReactPaginate from \"react-paginate\";\n\nclass Manager extends Component {\n  handleRequestClose = () => {\n    this.setState({\n      showMessage: false,\n    });\n  };\n\n  showRegisters = (registerList, selectedPageNum, numPerPage) => {\n    const users = registerList.slice(\n      selectedPageNum * numPerPage,\n      (selectedPageNum + 1) * numPerPage\n    );\n    return <RegisterList registerList={users} />;\n  };\n  onSearch = (e) => {\n    this.setState({ searchKey: e.target.value, selectPageNum: 0 });\n  };\n\n  onToggleDrawer() {\n    this.setState({\n      drawerState: !this.state.drawerState,\n    });\n  }\n\n  RegisterSideBar = () => {\n    return (\n      <div className=\"module-side\">\n        <div className=\"module-side-header\">\n          <div className=\"module-logo\">\n            <span>Managers</span>\n          </div>\n        </div>\n\n        <div className=\"module-side-content\">\n          <CustomScrollbars\n            className=\"module-side-scroll scrollbar\"\n            style={{\n              height:\n                this.props.width >= 1200\n                  ? \"calc(100vh - 200px)\"\n                  : \"calc(100vh - 80px)\",\n            }}\n          >\n            <div className=\"module-add-task\">\n              <Button\n                className=\"jr-btn btn-block\"\n                variant=\"contained\"\n                color=\"primary\"\n                aria-label=\"add\"\n                onClick={this.onTapNewRegister}\n              >\n                <span>{\"New Manager\"}</span>\n              </Button>\n            </div>\n          </CustomScrollbars>\n        </div>\n      </div>\n    );\n  };\n  onRegisterClose = () => {\n    this.setState({ isOpen: false });\n  };\n  onTapNewRegister = () => {\n    this.setState({ isOpen: true });\n  };\n  filterUsers = (users, userName) => {\n    return users.filter(\n      (user) =>\n        (user.first_name + \" \" + user.last_name)\n          .toLowerCase()\n          .indexOf(userName.toLowerCase()) > -1\n    );\n  };\n  handlePageClick = (data) => {\n    const selectPageNum = data.selected;\n    this.setState({ selectPageNum });\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      noContentFoundMessage: \"No Manager found\",\n      alertMessage: \"\",\n      showMessage: false,\n      drawerState: false,\n      searchKey: \"\",\n      currentRegister: null,\n      selectedRegister: null,\n      selectedRegisters: 0,\n      addBuildingState: false,\n      isOpen: false,\n\n      selectPageNum: 0,\n      numPerPage: 5,\n    };\n  }\n\n  render() {\n    const {\n      alertMessage,\n      showMessage,\n      noContentFoundMessage,\n      isOpen,\n      selectedRegister,\n      searchKey,\n      selectPageNum,\n      numPerPage,\n    } = this.state;\n    const { managers } = this.props;\n    const users =\n      searchKey === \"\" ? managers : this.filterUsers(managers, searchKey);\n    return (\n      <div className=\"app-wrapper\">\n        <div className=\"app-module animated slideInUpTiny animation-duration-3\">\n          <div className=\"d-block d-xl-none\">\n            <Drawer\n              open={this.state.drawerState}\n              onClose={this.onToggleDrawer.bind(this)}\n            >\n              {this.RegisterSideBar()}\n            </Drawer>\n          </div>\n          <div className=\"app-module-sidenav d-none d-xl-flex\">\n            {this.RegisterSideBar()}\n          </div>\n          <div className=\"module-box\">\n            <div className=\"module-box-header\">\n              <IconButton\n                className=\"drawer-btn d-block d-xl-none\"\n                aria-label=\"Menu\"\n                onClick={this.onToggleDrawer.bind(this)}\n              >\n                <i className=\"zmdi zmdi-menu\" />\n              </IconButton>\n              <AppModuleHeader\n                placeholder=\"Search manager\"\n                notification={false}\n                apps={false}\n                value={searchKey}\n                onChange={this.onSearch}\n              />\n            </div>\n            <div className=\"module-box-content\">\n              <CustomScrollbars\n                className=\"module-list-scroll scrollbar\"\n                style={{\n                  height:\n                    this.props.width >= 1200\n                      ? \"calc(100vh - 265px)\"\n                      : \"calc(100vh - 245px)\",\n                }}\n              >\n                {users.length === 0 ? (\n                  <div className=\"h-100 d-flex align-items-center justify-content-center\">\n                    {noContentFoundMessage}\n                  </div>\n                ) : (\n                  this.showRegisters(users, selectPageNum, numPerPage)\n                )}\n              </CustomScrollbars>\n              <ReactPaginate\n                previousLabel={\"previous\"}\n                nextLabel={\"next\"}\n                breakLabel={<a className=\"page-link\">...</a>}\n                pageCount={users.length / numPerPage}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                onPageChange={this.handlePageClick}\n                containerClassName=\"pagination justify-content-center\"\n                pageClassName=\"page-item\"\n                activeClassName=\"active\"\n                disabledClassName=\"disabled\"\n                pageLinkClassName=\"page-link\"\n                previousClassName=\"page-item\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item\"\n                nextLinkClassName=\"page-link\"\n                breakClassName=\"page-item disabled\"\n              />\n            </div>\n          </div>\n        </div>\n        {isOpen && (\n          <NewRegister\n            user_type={\"manager\"}\n            onRegisterClose={this.onRegisterClose}\n            open={isOpen}\n            register={selectedRegister}\n          />\n        )}\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={showMessage}\n          autoHideDuration={3000}\n          onClose={this.handleRequestClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\",\n          }}\n          message={<span id=\"message-id\">{alertMessage}</span>}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ settings, users }) => {\n  const { width } = settings;\n  const { managers } = users.users;\n  return { width, managers };\n};\nexport default connect(mapStateToProps)(Manager);\n"],"sourceRoot":""}