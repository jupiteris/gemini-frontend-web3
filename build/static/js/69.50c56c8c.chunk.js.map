{"version":3,"sources":["app/routes/RegisterPage/routes/Landlord/index.js"],"names":["Landlord","props","_this","Object","F_Task_React_Gemini_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","F_Task_React_Gemini_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","F_Task_React_Gemini_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handleRequestClose","setState","showMessage","showRegisters","registerList","selectedPageNum","numPerPage","users","slice","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_RegisterList__WEBPACK_IMPORTED_MODULE_10__","onSearch","e","searchKey","target","value","selectPageNum","RegisterSideBar","className","util_CustomScrollbars__WEBPACK_IMPORTED_MODULE_12__","style","height","width","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_9___default","variant","color","aria-label","onClick","onTapNewRegister","onRegisterClose","isOpen","filterUsers","userName","filter","user","first_name","last_name","toLowerCase","indexOf","handlePageClick","data","selected","state","noContentFoundMessage","alertMessage","drawerState","currentRegister","selectedRegister","selectedRegisters","addBuildingState","_this$state","landlords","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_13___default","open","onClose","onToggleDrawer","bind","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_6___default","components_AppModuleHeader_index__WEBPACK_IMPORTED_MODULE_11__","placeholder","notification","apps","onChange","length","react_paginate__WEBPACK_IMPORTED_MODULE_15___default","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageClassName","activeClassName","disabledClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","_NewRegister__WEBPACK_IMPORTED_MODULE_14__","user_type","register","_material_ui_core_Snackbar__WEBPACK_IMPORTED_MODULE_8___default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","id","Component","connect","_ref","settings"],"mappings":"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","file":"static/js/69.50c56c8c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { connect } from \"react-redux\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Button from \"@material-ui/core/Button\";\nimport RegisterList from \"../../RegisterList\";\nimport AppModuleHeader from \"components/AppModuleHeader/index\";\nimport CustomScrollbars from \"util/CustomScrollbars\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport NewRegister from \"../../NewRegister\";\nimport ReactPaginate from \"react-paginate\";\n\n\nclass Landlord extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      noContentFoundMessage: \"No Landlord found\",\n      alertMessage: \"\",\n      showMessage: false,\n      drawerState: false,\n      searchKey: \"\",\n      currentRegister: null,\n      selectedRegister: null,\n      selectedRegisters: 0,\n      addBuildingState: false,\n      isOpen: false,\n\n      selectPageNum: 0,\n      numPerPage: 5\n    };\n  }\n\n\n  handleRequestClose = () => {\n    this.setState({\n      showMessage: false\n    });\n  };\n\n  showRegisters = (registerList, selectedPageNum, numPerPage) => {\n    const users = registerList.slice(selectedPageNum*numPerPage, (selectedPageNum + 1)*numPerPage);\n    return (\n        <RegisterList\n            registerList={users}\n        />\n    );\n  };\n  onSearch = (e) => {\n    this.setState({ searchKey: e.target.value, selectPageNum: 0 });\n  };\n\n  onToggleDrawer() {\n    this.setState({\n      drawerState: !this.state.drawerState\n    });\n  }\n\n  RegisterSideBar = () => {\n    return <div className=\"module-side\">\n      <div className=\"module-side-header\">\n        <div className=\"module-logo\">\n          <span>Landlord</span>\n        </div>\n      </div>\n\n      <div className=\"module-side-content\">\n        <CustomScrollbars className=\"module-side-scroll scrollbar\"\n                          style={{ height: this.props.width >= 1200 ? \"calc(100vh - 200px)\" : \"calc(100vh - 80px)\" }}>\n          <div className=\"module-add-task\">\n            <Button className=\"jr-btn btn-block\" variant=\"contained\" color=\"primary\" aria-label=\"add\"\n                    onClick={this.onTapNewRegister}>\n              <span>{\"New Landlord\"}</span>\n            </Button>\n          </div>\n        </CustomScrollbars>\n      </div>\n    </div>;\n\n  };\n  onRegisterClose = () => {\n    this.setState({ isOpen: false });\n  };\n  onTapNewRegister = () => {\n    this.setState({ isOpen: true });\n  };\n  filterUsers = (users, userName) => {\n    return users.filter((user) =>\n        (user.first_name + \" \" + user.last_name).toLowerCase().indexOf(userName.toLowerCase()) > -1\n    );\n  };\n  handlePageClick = data => {\n    const selectPageNum = data.selected;\n    this.setState({selectPageNum});\n  };\n  render() {\n    const { alertMessage, showMessage, noContentFoundMessage, isOpen, selectedRegister, searchKey, selectPageNum, numPerPage } = this.state;\n    const { landlords } = this.props;\n    const users = searchKey === \"\"?landlords: this.filterUsers(landlords, searchKey);\n    return (\n        <div className=\"app-wrapper\">\n          <div className=\"app-module animated slideInUpTiny animation-duration-3\">\n            <div className=\"d-block d-xl-none\">\n              <Drawer\n                  open={this.state.drawerState}\n                  onClose={this.onToggleDrawer.bind(this)}>\n                {this.RegisterSideBar()}\n              </Drawer>\n            </div>\n            <div className=\"app-module-sidenav d-none d-xl-flex\">\n              {this.RegisterSideBar()}\n            </div>\n            <div className=\"module-box\">\n              <div className=\"module-box-header\">\n                <IconButton className=\"drawer-btn d-block d-xl-none\" aria-label=\"Menu\"\n                            onClick={this.onToggleDrawer.bind(this)}>\n                  <i className=\"zmdi zmdi-menu\"/>\n                </IconButton>\n                <AppModuleHeader placeholder=\"Search landlord\" notification={false} apps={false}\n                                 value={searchKey} onChange={this.onSearch}/>\n              </div>\n              <div className=\"module-box-content\">\n                <div className=\"module-box-topbar\">\n                </div>\n\n                <CustomScrollbars className=\"module-list-scroll scrollbar\"\n                                  style={{ height: this.props.width >= 1200 ? \"calc(100vh - 265px)\" : \"calc(100vh - 245px)\" }}>\n                  {users.length === 0 ?\n                      <div className=\"h-100 d-flex align-items-center justify-content-center\">\n                        {noContentFoundMessage}\n                      </div>\n                      : this.showRegisters(users, selectPageNum, numPerPage)\n                  }\n                </CustomScrollbars>\n                <ReactPaginate\n                    previousLabel={'previous'}\n                    nextLabel={'next'}\n                    breakLabel={<a className=\"page-link\">...</a>}\n                    pageCount={users.length/numPerPage}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={this.handlePageClick}\n                    containerClassName=\"pagination justify-content-center\"\n                    pageClassName=\"page-item\"\n                    activeClassName=\"active\"\n                    disabledClassName=\"disabled\"\n                    pageLinkClassName=\"page-link\"\n                    previousClassName=\"page-item\"\n                    previousLinkClassName=\"page-link\"\n                    nextClassName=\"page-item\"\n                    nextLinkClassName=\"page-link\"\n                    breakClassName=\"page-item disabled\"\n                />\n              </div>\n            </div>\n          </div>\n          {isOpen &&\n          <NewRegister\n              user_type={'landlord'}\n              onRegisterClose={this.onRegisterClose}\n              open={isOpen}\n              register={selectedRegister}\n          />\n          }\n          <Snackbar\n              anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n              open={showMessage}\n              autoHideDuration={3000}\n              onClose={this.handleRequestClose}\n              ContentProps={{\n                \"aria-describedby\": \"message-id\"\n              }}\n              message={<span id=\"message-id\">{alertMessage}</span>}\n          />\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ settings, users }) => {\n  const { width } = settings;\n  const { landlords } = users.users;\n  return { width, landlords };\n};\nexport default connect(mapStateToProps)(Landlord);\n"],"sourceRoot":""}